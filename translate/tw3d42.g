#  File converted from Magma code -- requires editing and checking
#  Magma -> GAP converter, version 0.43, 4/04/16 by AH

#  Global Variables used: Append, Centraliser, FPGroupStrong, Generators, Id,
#  Index, IsConjugate, Ngens, Order, Random, RandomProcess, Socle, Sym,
#  get_standard_gens_3d42, homom

#  Defines: get_standard_gens_3d42, tw3D42Identify

DeclareGlobalFunction("tw3D42Identify@");

get_standard_gens_3d42@:=function(G)
#  /out: standard gens from Birmingham web page /out: assumes G is isomorphic
#  to 3D4(2) 
local P,a,ab,b,x;
  P:=RandomProcess(G);
  repeat
    x:=Random(P);
    
  until Order(x)=18;
  #   1 in 6 
  a:=x^9;
  b:=x^2;
  repeat
    b:=b^Random(P);
    ab:=a*b;
    
  until Order(ab)=13 and Order(ab*b)=8;
  #   6 in 91 
  return rec(val1:=a,
    val2:=b);
end;
;
InstallGlobalFunction(tw3D42Identify@,
function(group)
local 
   CG,F,M,Print,S,a,a3d42,aut,b,c,ce,g,ga,gb,group,h,homom,i,ims,isc,j,max,
   maximals,newgens,phi,simp,soc;
  max:=ValueOption("max");
  if max=fail then
    max:=true;
  fi;
  Print:=ValueOption("Print");
  if Print=fail then
    Print:=0;
  fi;
  S:=SymmetricGroup(819);
  a:=(2,19)(3,33)(6,48)(7,59)(8,71)(9,69)(10,94)(11,106)(12,118)(13,128)(14,32)
   (15,53)(16,27)(17,163)(18,135)(20,151)(21,181)(22,199)(23,210)(24,77)(25,233)
   (26,129)(28,73)(29,266)(30,274)(31,277)(34,296)(36,149)(37,183)(38,333)
   (39,343)(40,44)(41,360)(42,363)(43,347)(45,159)(46,213)(47,373)(49,318)
   (50,399)(51,405)(52,412)(54,421)(55,124)(56,112)(57,273)(58,272)(60,76)
   (61,453)(62,458)(63,75)(64,72)(65,101)(66,340)(67,170)(68,237)(70,414)
   (74,518)(78,160)(79,471)(80,480)(81,484)(82,492)(83,141)(84,565)(85,120)
   (86,323)(87,580)(88,587)(89,330)(90,257)(91,180)(92,419)(93,178)(95,422)
   (96,602)(97,432)(98,550)(99,406)(100,474)(102,496)(103,212)(104,571)(105,371)
   (107,638)(108,381)(109,503)(110,290)(111,391)(113,598)(114,482)(115,416)
   (116,161)(117,418)(119,328)(121,662)(122,500)(123,573)(125,201)(126,394)
   (127,239)(130,630)(131,616)(132,280)(133,410)(134,282)(136,179)(137,265)
   (138,369)(139,696)(140,542)(142,267)(143,489)(144,242)(145,241)(146,365)
   (147,244)(148,258)(150,379)(152,314)(153,247)(154,248)(155,249)(156,240)
   (157,182)(158,641)(162,361)(164,551)(165,508)(166,537)(167,457)(168,203)
   (169,264)(171,349)(172,731)(173,316)(174,493)(175,621)(176,591)(177,509)
   (184,228)(185,730)(186,736)(187,722)(188,578)(189,577)(190,409)(191,207)
   (192,229)(193,702)(194,734)(195,614)(196,291)(197,669)(198,746)(200,695)
   (202,491)(204,510)(205,748)(206,539)(208,285)(209,261)(211,219)(214,691)
   (215,530)(216,766)(217,270)(218,221)(220,532)(222,494)(223,437)(224,769)
   (225,436)(226,716)(227,384)(230,687)(231,276)(232,668)(234,385)(235,777)
   (236,526)(238,305)(243,600)(245,563)(246,545)(250,427)(251,300)(252,713)
   (253,292)(254,505)(255,788)(256,507)(259,279)(260,362)(262,656)(263,562)
   (268,718)(269,434)(271,435)(275,440)(278,633)(281,431)(283,341)(284,603)
   (286,636)(287,433)(288,459)(289,504)(293,569)(294,735)(295,513)(298,779)
   (304,319)(306,467)(307,595)(308,408)(309,710)(310,321)(311,790)(312,627)
   (313,355)(315,445)(317,461)(320,561)(322,745)(324,763)(325,519)(326,741)
   (327,683)(329,455)(331,586)(332,585)(334,588)(335,390)(336,596)(337,533)
   (338,617)(339,520)(342,375)(344,699)(345,726)(346,728)(348,374)(350,613)
   (351,498)(352,733)(353,486)(354,665)(356,686)(357,708)(358,380)(359,809)
   (364,367)(366,515)(368,462)(370,681)(372,707)(376,640)(377,388)(378,387)
   (382,742)(383,639)(386,594)(389,729)(392,623)(393,747)(395,396)(397,438)
   (398,423)(400,413)(401,632)(402,817)(403,477)(404,607)(407,540)(411,629)
   (415,556)(417,676)(420,690)(424,652)(425,774)(426,650)(428,651)(429,649)
   (430,773)(439,522)(441,524)(442,525)(443,527)(444,528)(446,452)(448,752)
   (449,604)(450,813)(451,768)(454,755)(456,581)(460,723)(463,523)(464,499)
   (465,501)(466,502)(468,538)(469,622)(470,624)(472,625)(473,479)(475,789)
   (476,806)(478,497)(481,557)(483,663)(485,495)(487,711)(488,555)(490,634)
   (506,724)(511,572)(512,570)(514,642)(516,644)(517,648)(521,628)(529,804)
   (531,608)(534,558)(535,635)(536,703)(541,737)(543,548)(544,771)(546,694)
   (547,626)(549,762)(552,698)(553,787)(554,619)(559,697)(560,744)(564,738)
   (566,751)(567,601)(568,618)(574,677)(575,791)(576,759)(579,709)(582,740)
   (583,785)(584,720)(589,704)(590,606)(592,597)(593,721)(599,795)(605,818)
   (609,611)(610,661)(612,685)(615,712)(631,808)(637,784)(643,743)(645,776)
   (646,807)(647,693)(653,672)(654,781)(655,679)(657,725)(658,664)(659,812)
   (660,714)(666,792)(667,684)(670,760)(671,689)(673,750)(675,782)(678,780)
   (680,754)(682,765)(688,705)(692,719)(700,786)(701,757)(706,797)(715,810)
   (717,753)(727,811)(732,756)(739,796)(749,772)(758,815)(761,793)(764,767)
   (770,775)(778,814)(794,799)(802,819) #CAST S
    ;
  b:=(1,230,292,728,298,683,83,596,563)(2,384,508,631,10,227,752,356,412)
   (3,511,592,84,441,517,38,278,454)(4,502,734,145,732,447,271,419,697)
   (5,169,614,574,396,327,509,561,284)(6,789,559,435,701,223,357,498,310)
   (7,123,25,174,44,757,546,600,352)(8,22,529,520,224,133,238,548,269)
   (9,313,537,344,481,139,471,119,102)(11,450,216,514,369,173,67,547,432)
   (12,56,812)(13,371,765,146,337,705,706,240,679)
   (14,569,714,624,420,694,513,88,354)(15,349,205,260,103,373,258,803,315)
   (16,304,246,506,530,162,483,636,130)(17,719,762,37,75,448,69,202,181)
   (18,582,528,539,666,750,255,110,302)(19,221,617,669,729,638,388,751,795)
   (20,314,316,132,87,747,171,469,152)(21,218,792,177,272,531,378,648,532)
   (23,401,321,440,47,297,217,776,708)(24,755,507,468,644,416,187,721,556)
   (26,115,656,798,590,668,96,397,209)(27,295,36,690,713,796,551,689,192)
   (28,350,595,39,482,639,778,386,190)(29,239,196,164,727,178,100,293,286)
   (30,108,788,198,710,455,580,781,524)(31,82,155,516,325,135,105,374,736)
   (32,326,383,99,741,671,770,715,786)(33,97,552,42,128,282,199,410,328)
   (34,193,527,523,562,568,166,206,653)(35,345,809,663,62,307,760,277,553)
   (40,658,252,391,153,797,465,627,348)(41,330,220,813,500,429,407,296,214)
   (43,695,479,107,165,333,305,761,626)(45,204,50,758,73,473,684,370,406)
   (46,673,426,572,241,308,740,266,731)(48,554,121,85,591,557,433,415,117)
   (49,625,248,493,54,717,774,359,129)(51,635,460,71,365,94,163,409,771)
   (52,756,575,438,331,61,567,233,681)(53,659,584,322,462,245,687,222,318)
   (55,526,470,619,424,77,657,342,565)(57,275,707,92,662,645,457,477,486)
   (58,273,317,463,411,175,667,423,343)(59,541,711,306,703,802,367,702,685)
   (60,810,691,213,141,340,140,346,125)(63,377,640,533,785,503,168,267,279)
   (64,675,264,566,111,725,709,637,542)(65,618,207,151,362,467,287,603,300)
   (66,730,458,312,236,491,161,606,425)(68,70,494,519,301,772,766,154,398)
   (72,232,180,718,113,360,745,332,661)(74,488,288,453,229,651,799,114,811)
   (76,612,628,649,170,294,376,242,472)(78,280,720,522,620,148,270,807,191)
   (79,633,247,738,124,682,489,536,263)(80,492,650,347,518,613,188,775,443)
   (81,439,726,336,90,253,512,445,576)(86,427,421,91,418,461,380,257,744)
   (89,808,144,759,515,156,597,392,484)(93,390,311)
   (95,413,646,497,436,417,608,430,670)(98,610,570,800,791,593,442,399,579)
   (101,534,243,428,372,664,437,250,186)(104,564,588,126,480,244,602,743,265)
   (106,116,801,251,422,142,779,581,647)(109,459,621,577,212,794,320,525,504)
   (112,157,501,578,601,276,338,712,395)(118,456,452,183,573,235,228,375,329)
   (120,665,226,676,234,634,474,159,400)(122,622,607,172,680,735,195,363,535)
   (127,678,496,194,655,179,589,201,642)(131,289,387,285,746,583,773,237,674)
   (134,143,696,558,319,487,485,599,408)(136,722,643,364,700,184,815,490,405)
   (137,677,543,366,464,274,805,414,560)(138,160,540,769,281,804,521,748,404)
   (147,753,782,303,381,249,585,261,605)(149,475,652,268,379,231,672,611,176)
   (150,777,716,361,818,787,466,686,814)(158,704,259,737,724,780,256,816,768)
   (167,203,510,382,594,225,763,819,323)(182,499,208,641,262,505,688,211,393)
   (185,660,355,478,692,790,200,555,403)(189,495,739,784,353,385,544,335,389)
   (197,549,210,654,334,698,571,219,632)(215,324,629,402,630,733,339,609,764)
   (254,309,623,434,693,394,358,283,299)(290,749,723,446,351,615,793,449,451)
   (291,550,586,817,444,806,699,587,767)(341,616,742,598,754,604,783,538,368) 
   #CAST S
    ;
  c:=(1,2,7)(3,21,182)(4,34,287)(5,36,268)(6,37,311)(8,61,446)(9,73,503)
   (10,84,304)(11,96,136)(12,108,584)(13,120,656)(14,129,577)(15,139,55)
   (16,148,396)(17,158,718)(18,94,598)(19,170,35)(20,46,378)(22,192,141)
   (23,201,463)(24,212,333)(25,224,767)(26,235,32)(27,245,510)(28,251,468)
   (29,259,407)(30,156,715)(31,146,621)(33,283,547)(38,322,591)(39,291,618)
   (40,344,142)(41,351,809)(42,339,305)(43,366,424)(44,370,575)(45,324,657)
   (47,382,778)(48,274,240)(49,190,494)(50,106,524)(51,401,550)(52,209,69)
   (53,114,124)(54,417,645)(56,430,63)(57,149,380)(58,326,750)(59,302,341)
   (60,338,323)(62,455,140)(64,206,290)(65,372,798)(66,474,552)(67,157,626)
   (68,486,569)(70,495,262)(71,498,690)(72,347,649)(74,500,597)(75,316,221)
   (76,521,226)(77,529,443)(78,299,635)(79,537,161)(80,544,151)(81,438,285)
   (82,553,381)(83,409,164)(85,551,392)(86,566,90)(87,571,312)(88,214,604)
   (89,216,144)(91,256,412)(92,194,284)(93,596,452)(95,403,703)(97,342,543)
   (98,195,580)(99,612,710)(100,528,239)(101,484,272)(102,346,807)(103,269,357)
   (104,252,229)(105,425,745)(107,466,559)(109,406,610)(110,113,135)
   (111,155,665)(112,473,464)(115,448,705)(116,402,404)(117,654,582)
   (118,293,205)(119,273,296)(121,658,788)(122,557,220)(123,567,782)
   (125,353,349)(126,670,313)(127,211,374)(128,549,625)(130,506,489)
   (131,471,368)(132,678,590)(133,684,453)(134,343,526)(137,243,677)
   (138,166,414)(143,700,318)(145,704,679)(147,706,162)(150,320,727)
   (152,165,355)(153,431,799)(154,701,760)(159,488,332)(160,361,232)
   (163,416,433)(167,428,608)(168,261,617)(169,436,505)(171,435,721)
   (172,511,753)(173,350,810)(174,523,689)(175,659,743)(176,642,681)
   (177,682,714)(178,440,509)(179,601,786)(180,729,653)(181,303,301)
   (183,737,499)(184,738,280)(185,740,360)(186,644,722)(187,730,609)
   (188,507,267)(189,693,281)(191,199,260)(193,607,533)(196,358,812)
   (197,688,813)(198,429,427)(200,309,628)(202,717,410)(203,420,508)
   (204,620,279)(207,692,516)(208,579,641)(210,763,253)(213,384,456)
   (215,630,592)(217,266,761)(218,539,258)(219,485,757)(222,257,248)
   (223,532,329)(225,450,264)(227,713,475)(228,751,445)(230,238,454)
   (231,308,364)(233,451,574)(234,660,497)(236,783,615)(237,327,792)
   (241,728,806)(242,517,707)(244,426,613)(246,616,781)(247,328,345)
   (249,487,764)(250,535,747)(254,422,709)(255,348,278)(263,724,719)
   (265,600,785)(270,775,650)(271,633,390)(275,594,399)(276,687,716)
   (277,365,595)(282,794,629)(286,754,482)(288,371,340)(289,663,734)
   (292,418,811)(294,444,742)(295,674,479)(297,773,686)(298,622,789)
   (300,481,375)(306,627,588)(307,726,637)(310,469,787)(314,765,720)
   (315,804,602)(317,472,337)(319,563,541)(321,373,593)(325,652,356)
   (330,802,784)(331,638,385)(334,388,698)(335,555,744)(336,442,573)
   (352,603,478)(354,476,801)(359,671,672)(362,723,492)(363,400,369)
   (367,564,666)(376,755,756)(377,685,379)(383,386,467)(387,694,545)
   (389,762,483)(391,758,646)(393,565,465)(394,459,587)(395,805,793)
   (397,568,777)(398,748,691)(405,683,432)(408,808,576)(411,816,531)
   (413,662,512)(415,513,519)(419,490,639)(421,548,739)(423,631,818)
   (434,460,586)(437,614,774)(439,790,668)(441,561,817)(447,711,655)
   (449,791,480)(457,669,819)(458,560,491)(461,605,572)(462,779,640)
   (470,554,732)(477,643,648)(493,632,623)(496,583,815)(501,680,556)
   (502,695,725)(504,759,772)(514,520,697)(515,696,770)(518,585,733)
   (522,540,636)(525,776,534)(527,542,702)(530,619,749)(536,651,712)
   (538,599,562)(546,606,796)(558,731,771)(570,699,795)(578,634,581)
   (589,769,768)(611,708,780)(624,675,814)(647,752,673)(661,676,735)
   (664,667,736)(741,766,800)(746,797,803) #CAST S
    ;
  simp:=SubStructure(S,a,#TODO CLOSURE
    b);
  simp.Order:=211341312;
  # =v= MULTIASSIGN =v=
  phi:=FPGroupStrong(simp);
  F:=phi.val1;
  phi:=phi.val2;
  # =^= MULTIASSIGN =^=
  soc:=Socle(group);
  aut:=Index(group,soc);
  if Print > 1 then
    Print("group is 3D4(2):[%o]\n",aut);
  fi;
  # =v= MULTIASSIGN =v=
  gb:=get_standard_gens_3d42@(soc);
  ga:=gb.val1;
  gb:=gb.val2;
  # =^= MULTIASSIGN =^=
  soc:=SubStructure(soc,ga,#TODO CLOSURE
    gb);
  soc.Order:=211341312;
  newgens:=[ga,gb];
  for g in Generators(group) do
    if not g in SubStructure(group,newgens) then
      Add(newgens,g);
    fi;
  od;
  group:=SubStructure(group,newgens);
  a3d42:=SubStructure(S,a,#TODO CLOSURE
    b,c);
  ims:=[a,b];
  homom:=GroupHomomorphismByImages(soc,simp,
    GeneratorsOfGroup(soc),ims);
  for i in [Ngens(soc)+1..Ngens(group)] do
    g:=group.i;
    CG:=a3d42;
    ce:=One(a3d42);
    for j in [1..2] do
      # =v= MULTIASSIGN =v=
      h:=IsConjugate(CG,simp.j^ce,homom(soc.j^g));
      isc:=h.val1;
      h:=h.val2;
      # =^= MULTIASSIGN =^=
      if not isc then
        Error("Conjugation error in Aut(3D4(2))");
      fi;
      CG:=Centraliser(CG,homom(soc.j^g));
      ce:=ce*h;
    od;
    Add(ims,ce);
  od;
  newgens:=ims;
  for g in Generators(a3d42) do
    if not g in SubStructure(a3d42,ims) then
      Add(ims,g);
    fi;
  od;
  a3d42:=SubStructure(S,ims);
  homom:=GroupHomomorphismByImages(group,a3d42,
    GeneratorsOfGroup(group),newgens);
  maximals:=[];
  if not max then
    return rec(val1:=homom,
      val2:=a3d42,
      val3:=maximals,
      val4:=F,
      val5:=phi);
  fi;
  #  
  #  Maximal subgroups from Birmingham web page.
  #  If their list is complete then all the subgroups below are
  #  maximal subgroups and give one from each conjugacy class
  #  of maximal subgroups.
  
  #   2^(1+8):L(2,8) [point stabilizer]
  M:=SubStructure(simp,b*a*b^-1*a*b,#TODO CLOSURE
    b^-2*a*b^2*a*b^-2);
  M.Order:=258048;
  Add(maximals,M);
  #   [2^11]:(7 x S3)
  M:=SubStructure(simp,b*a*b^-1*a*b,#TODO CLOSURE
    b^-1*a*b^-1*a*b^-1*a*b*a*b*a*b);
  M.Order:=86016;
  Add(maximals,M);
  #   U(3,3):2
  M:=SubStructure(simp,a*b^-1*a*b^-1*a*b^-3*a*b^-1*a*b^-2*a,#TODO CLOSURE
    b^-1*a*b*a*b^-2*a*b^-3*a*b^-2*a*b*a*b);
  M.Order:=12096;
  Add(maximals,M);
  #   S3 x L(2,8)
  M:=SubStructure(simp,a*b^3*a*b^-3,#TODO CLOSURE
    a*b^-1*a*b^-1*a*b^-2*a*b^-2*a*b^2);
  M.Order:=3024;
  Add(maximals,M);
  #   (7 x L(2,7)):2
  M:=SubStructure(simp,a*b^-2*a*b^2*a,#TODO CLOSURE
    b^-1*a*b^-1*a*b^-2*a*b*a*b^-2*a*b^-2,a*b^4*a*b^3*a*b^4*a*b^2);
  M.Order:=2352;
  Add(maximals,M);
  #   3^(1+2):2S4
  M:=SubStructure(simp,b^3*a*b^2*a*b^-3*a*b^2*a*b^3*a,#TODO CLOSURE
    a*b^2*a*b^4*a*b^2*a*b^2*a*b^-2*a*b^-1);
  M.Order:=1296;
  Add(maximals,M);
  #   7^2:2A4
  M:=SubStructure(simp,b^-1*a*b^-2*a*b^-1*a*b^-1*a*b*a*b*a*b*a*b^2,#TODO 
   CLOSURE
    b*a*b^2*a*b^-1*a*b^-1*a*b*a*b*a*b^-3*a*b^-2);
  M.Order:=1176;
  Add(maximals,M);
  #   3^2:2A4
  M:=SubStructure(simp,b^-2*a*b^-1*a*b^-3*a*b^-1*a*b^2*a*b^3*a*b*a,#TODO 
   CLOSURE
    a*b^-1*a*b^3*a*b^-4*a*b*a*b*a*b^2*a*b^-2);
  M.Order:=216;
  Add(maximals,M);
  #   13:4
  M:=SubStructure(simp,
   b*a*b*a*b^-2*a*b^-4*a*b*a*b^-2*a*b^-1*a*b^-1*a*b^-1*a*b^-1,#TODO CLOSURE
    b^-1*a*b^2*a*b^-1*a*b^-4*a*b*a*b^2*a*b*a*b^2*a*b*a);
  M.Order:=52;
  Add(maximals,M);
  return rec(val1:=homom,
    val2:=a3d42,
    val3:=maximals,
    val4:=F,
    val5:=phi);
end);



#  File converted from Magma code -- requires editing and checking
#  Magma -> GAP converter, version 0.43, 4/04/16 by AH

#  Global Variables used: Append, Centraliser, FPGroupStrong, Generators, Id,
#  Index, IsConjugate, Ngens, Order, Random, RandomProcess, Socle, Sym,
#  distinguish_2_1, get_standard_gens_om83, homom

#  Defines: Om83Identify, distinguish_2_1, get_standard_gens_om83

DeclareGlobalFunction("Om83Identify@");

get_standard_gens_om83@:=function(G)
#  /out: assumes G = O-(8,3), standard gens definition from Birmingham
#  Atlas/out: a in 2A, b in 4F, Orders of ab, abb, ababb are 41, 6, 41 resp.
local P,a,b,count,found4F,ord,x,y;
  P:=RandomProcess(G);
  #   3 in 26 of finding a 2A
  repeat
    a:=Random(P);
    ord:=Order(a);
    
  until ord in Set([26,32,52]);
  a:=a^(QuoInt(ord,2));
  #   in class 2A
  repeat
    #   This loop is 2076079/42456960 (about 1 in 20) of finding
    repeat
      b:=Random(P);
      ord:=Order(b);
      
    until ord in Set([4,8]);
    if ord=8 then
      b:=b^2;
    fi;
    #   about 2/3 prob that we've got b in  4F, have to confirm or reject
    count:=0;
    repeat
      count:=count+1;
      b:=b^Random(P);
      #   if b in 4F then 1024/3321 is prob of next being true
      #   prob is 0 if b not in 4F
      found4F:=Order(a*b) in Set([40,41]);
      
    until found4F or count >= 15;
    
  until found4F;
  #   this next is 1024/69741 (1 in 70 ish) of executing the return
  repeat
    b:=b^Random(P);
    x:=a*b;
    if Order(x)<>41 then
      continue;
    fi;
    #   2560/9963 to get here
    y:=x*b;
    if Order(y)<>6 then
      continue;
    fi;
    #   2048/69741 to get here
    if Order(x*y)=41 then
      return rec(val1:=a,
        val2:=b);
    fi;
    
  until false;
end;
;
distinguish_2_1@:=function(G,x)
local P,ord;
  P:=RandomProcess(G);
  repeat
    ord:=Order(Random(P)*x);
    #   if not 2_1 then 361/910 or 15833/22386 or to return true
    if ord > 36 then
      return false;
    fi;
    #   if 2_1 then 2671/4095 to return true
    if ord in Set([14,18,26,28,30,36]) then
      return true;
    fi;
    
  until false;
end;
;
InstallGlobalFunction(Om83Identify@,
function(group)
local 
   CG,F,M,Print,S,a,aut,autom83,b,c,ce,d,dummy,g,ga,gb,group,h,homom,i,ims,isc,
   j,max,maximals,newgens,om83,phi,simple_flag,soc;
  max:=ValueOption("max");
  if max=fail then
    max:=true;
  fi;
  Print:=ValueOption("Print");
  if Print=fail then
    Print:=0;
  fi;
  S:=SymmetricGroup(1066);
  a:=(1,514)(2,881)(3,362)(4,762)(5,154)(6,474)(7,127)(8,555)(9,463)(10,809)
   (11,663)(13,44)(14,560)(15,944)(16,1013)(17,369)(18,66)(20,475)(21,116)
   (22,1038)(23,99)(24,841)(25,1048)(26,155)(27,558)(28,806)(29,80)(30,386)
   (31,132)(32,820)(33,556)(35,547)(36,361)(37,527)(38,991)(39,54)(41,719)
   (42,297)(45,317)(46,391)(47,1040)(48,840)(49,581)(50,604)(51,333)(52,483)
   (53,725)(55,469)(56,504)(57,931)(58,789)(60,886)(61,879)(62,821)(63,1037)
   (64,1009)(65,712)(68,357)(69,936)(70,985)(71,168)(72,399)(73,973)(74,797)
   (76,273)(77,192)(78,614)(81,144)(82,665)(83,982)(85,903)(86,691)(87,1029)
   (88,515)(90,893)(91,888)(92,1006)(93,256)(94,744)(95,955)(96,1024)(98,295)
   (101,880)(102,899)(103,890)(104,473)(106,1018)(108,742)(109,709)(110,963)
   (111,198)(112,1034)(113,200)(114,677)(115,710)(117,497)(118,286)(119,959)
   (120,443)(121,830)(122,253)(123,490)(124,341)(125,586)(126,929)(128,623)
   (130,804)(131,434)(133,774)(134,869)(135,367)(136,596)(137,236)(138,697)
   (140,724)(141,927)(142,180)(143,567)(146,196)(148,816)(149,379)(150,794)
   (151,283)(153,798)(156,619)(157,962)(158,503)(159,506)(160,588)(161,910)
   (163,435)(164,948)(165,500)(166,640)(167,532)(169,212)(170,996)(171,405)
   (173,643)(174,763)(175,859)(176,727)(177,387)(179,580)(181,479)(182,1019)
   (183,188)(184,842)(185,250)(186,945)(189,884)(190,322)(191,1030)(193,701)
   (194,688)(195,1054)(197,895)(199,622)(201,971)(203,807)(204,215)(205,646)
   (207,1022)(208,672)(209,856)(210,843)(211,396)(213,708)(214,272)(216,969)
   (217,471)(218,824)(220,228)(221,917)(222,687)(223,436)(224,978)(225,999)
   (226,576)(227,439)(229,861)(230,1014)(231,419)(233,833)(234,919)(235,812)
   (237,354)(238,994)(239,554)(240,1025)(241,531)(243,930)(244,695)(245,855)
   (246,355)(248,716)(249,898)(251,372)(252,960)(254,595)(255,737)(257,328)
   (258,647)(259,683)(260,811)(261,755)(262,721)(263,621)(265,460)(266,509)
   (267,390)(269,1010)(270,488)(274,771)(275,502)(276,352)(277,395)(278,1007)
   (279,796)(280,793)(281,905)(282,307)(284,760)(285,617)(288,667)(289,658)
   (290,826)(291,572)(292,302)(293,448)(294,876)(296,404)(298,957)(299,452)
   (300,947)(303,525)(304,427)(305,310)(308,1032)(309,336)(311,964)(314,1046)
   (315,720)(316,866)(318,748)(319,496)(320,326)(323,863)(324,346)(325,1016)
   (327,413)(329,704)(331,516)(332,651)(335,598)(337,459)(338,521)(342,375)
   (343,543)(344,743)(345,974)(347,590)(349,559)(350,530)(351,928)(356,1003)
   (358,652)(359,629)(363,950)(364,825)(365,407)(366,711)(370,615)(371,926)
   (373,389)(374,1027)(376,684)(377,786)(381,1063)(382,449)(383,608)(388,534)
   (392,462)(393,644)(394,507)(397,577)(398,468)(400,829)(401,787)(402,723)
   (406,800)(408,730)(409,784)(410,539)(411,984)(412,739)(416,633)(417,878)
   (418,432)(420,908)(421,813)(422,451)(423,610)(428,745)(429,981)(430,937)
   (431,769)(433,485)(437,714)(438,501)(440,546)(441,976)(442,764)(444,924)
   (445,883)(446,864)(447,874)(450,657)(453,993)(455,648)(456,779)(457,836)
   (461,747)(464,817)(465,956)(466,818)(470,953)(476,1011)(477,717)(478,906)
   (480,605)(481,970)(482,872)(484,773)(486,696)(487,923)(489,1044)(491,1064)
   (493,785)(494,528)(498,612)(499,1045)(508,597)(511,966)(512,606)(513,808)
   (517,916)(518,992)(519,938)(520,902)(522,625)(524,631)(526,1043)(529,593)
   (533,741)(537,1066)(538,791)(540,941)(542,882)(544,582)(545,772)(548,756)
   (550,553)(551,802)(552,1028)(557,1020)(561,997)(564,592)(565,838)(566,659)
   (568,649)(569,998)(570,951)(571,892)(573,732)(574,656)(575,754)(579,650)
   (583,831)(584,638)(585,641)(587,1052)(589,854)(591,734)(594,681)(599,632)
   (600,1015)(601,850)(602,636)(603,676)(609,767)(611,995)(613,1001)(616,801)
   (618,983)(620,642)(624,870)(626,885)(627,968)(628,827)(630,1021)(639,678)
   (645,703)(653,736)(654,686)(655,679)(660,894)(662,932)(664,766)(666,706)
   (668,750)(670,837)(673,851)(675,828)(682,1012)(685,877)(689,822)(690,1008)
   (692,780)(693,778)(694,795)(698,726)(699,776)(702,977)(707,1060)(713,740)
   (718,731)(728,1000)(729,961)(735,849)(746,1036)(751,909)(759,939)(761,896)
   (765,1057)(768,921)(770,815)(777,990)(782,1042)(792,949)(805,1005)(810,979)
   (819,967)(834,952)(839,942)(845,986)(846,853)(847,907)(848,1055)(860,889)
   (862,1041)(865,988)(871,1056)(887,1062)(891,913)(897,1050)(900,912)(901,934)
   (911,1051)(914,943)(920,1033)(925,958)(940,1031)(972,1047)(980,1035)
   (1002,1061)(1026,1059)(1049,1053) #CAST S
    ;
  b:=(1,743,778,657)(2,740,73,234)(3,828,387,1064)(4,663,89,794)(5,789,203,719)
   (6,277,903,31)(7,870,572,292)(8,752,170,928)(9,598,737,309)(10,232,895,1005)
   (11,630,100,207)(12,538,360,757)(13,849,563,706)(14,686,911,492)
   (15,1062,46,918)(16,48,530,884)(17,358,594,121)(18,421,910,698)
   (19,578,811,288)(20,54,689,776)(21,709,72,506)(22,1011,771,109)
   (23,472,716,625)(24,1043,1019,412)(25,524,586,650)(26,362,30,720)
   (27,92,302,723)(28,423,283,103)(29,149,669,996)(32,220,925,577)
   (33,919,1066,361)(34,499,939,931)(35,968,1006,571)(36,237,1007,481)
   (37,665,107,890)(38,948,806,359)(39,219,702,343)(40,533,310,83)
   (41,864,751,391)(42,316,462,775)(43,567,711,780)(44,897,759,1001)
   (45,633,999,662)(47,1003,959,1021)(49,681,1025,798)(50,782,181,756)
   (51,90,167,830)(52,312,286,772)(53,297,505,231)(55,1008,258,280)(56,75)
   (57,70,426,210)(58,851,389,825)(59,60,696,206)(61,208,378,528)(62,878)
   (63,672,998,86)(64,529,659,839)(65,761,500,430)(66,834,647,490)
   (67,734,186,867)(68,908,160,303)(69,110,784,941)(71,957,1035,450)
   (74,468,141,185)(76,298,473,364)(77,189,367,368)(78,601,793,674)
   (79,137,1057,617)(80,604,326,610)(81,574,520,922)(82,569,573,226)
   (84,118,319,354)(85,324,856,938)(87,526,259,154)(88,313,673,338)
   (91,1050,954,861)(93,474,221,209)(94,927,497,144)(95,579,284,812)
   (96,187,829,873)(97,920,418,544)(98,685,762,962)(99,622,250,687)
   (101,1033,487,1013)(102,416,848,858)(104,894,1039,862)(105,648,997,331)
   (106,546,249,593)(108,933,850,336)(111,824,797,576)(112,410,588,413)
   (113,165,564,989)(114,274,463,347)(115,621,205,1037)(116,642,880,124)
   (117,843,204,329)(119,353)(120,454,666,975)(122,746,431,1041)
   (123,692,238,1048)(125,507,346,907)(126,906,339,961)(127,480,697,201)
   (128,670,548,434)(129,992,223,279)(130,190,728,760)(131,885,502,200)
   (132,611,668,888)(133,639,134,470)(135,422,875,879)(136,974,976,442)
   (138,514,565,900)(139,953,644,768)(140,796,970,570)(142,355,155,693)
   (143,991,519,618)(145,179,619,982)(146,688,184,724)(147,437,183,852)
   (148,1045,1023,549)(150,273,415,334)(151,714,787,305)(152,252,863,337)
   (153,940,491,393)(156,351)(157,1018,239,1022)(158,876,745,314)
   (159,638,498,318)(161,583,1016,542)(162,606,535,902)(163,397,382,584)
   (164,969,799,386)(166,377,388,722)(168,541,744,1026)(169,678,240,921)
   (171,809,278,510)(172,444,608,1002)(173,727,178,841)(174,741,635,558)
   (175,641,1034,254)(176,458,440,289)(177,215,477,453)(180,865,501,701)
   (182,395,942,372)(188,1040,654,262)(191,443,634,322)(192,214,1065,943)
   (193,986,1020,661)(194,229,483,822)(195,486,690,383)(196,581,923,710)
   (197,845,823,656)(198,493,512,317)(199,937,233,754)(202,786,1053,591)
   (211,253,392,381)(212,658,282,791)(213,913,813,537)(216,471,452,1009)
   (217,779,1032,489)(218,984,485,868)(222,747,1038,964)(224,718,522,730)
   (225,801,1036,949)(227,420,559,304)(228,988,602,557)(230,934,597,315)
   (236,947,869,914)(241,411,409,323)(242,792,831,603)(243,877,1029,402)
   (244,585,808,1014)(245,534,632,365)(246,676,731,837)(247,385,978,935)
   (248,682,820,562)(251,438,484,299)(255,631)(256,990,503,508)
   (257,695,333,1054)(260,950,432,983)(261,568,945,1047)(263,511,433,270)
   (264,406,742,1044)(265,683,545,459)(266,290,456,464)(267,725,455,703)
   (268,465,320,596)(269,965,930,995)(271,667)(272,866,552,496)(275,766,616,887)
   (276,612,375,466)(281,655,713,352)(285,781,764,827)(287,664,932,495)
   (291,840,374,680)(294,679,700,342)(295,777,671,916)(296,981,1027,488)
   (300,795,1000,717)(301,1052,826,476)(306,769,504,575)(307,924,646,917)
   (308,403,872,832)(311,457,348,773)(321,715,335,645)(325,614,853,513)(327,721)
   (328,901,532,694)(330,800,620,892)(332,521,898,527)(340,748,1058,553)
   (341,871,380,783)(344,774,515,345)(349,448,973,539)(350,556,855,429)
   (356,899,651,373)(357,1042,963,623)(363,1015,401,738)(366,624,816,580)
   (369,396,551,972)(370,599,566,582)(371,1024,753,439)(376,1031,613,814)
   (379,1063,449,896)(384,883)(390,750,531,836)(394,735,979,955)
   (398,479,958,732)(399,536,842,461)(400,417,881,523)(404,543,838,436)
   (405,765,905,763)(407,595,640,517)(408,518,912,951)(414,482,451,615)
   (419,819,649,467)(424,675,854,802)(425,785,560,660)(427,587,893,818)
   (428,509,1061,627)(435,929,815,628)(441,684,699,475)(445,547,915,554)
   (446,804,944,1028)(447,936,1059,516)(460,636,790,550)(469,705,846,1051)
   (478,607,807,1017)(494,729,691,739)(525,1012,652,600)(540,857,859,755)
   (555,803,770,629)(561,971,643,847)(589,980,805,993)(590,609,833,758)
   (592,985,994,704)(605,708,736,726)(626,891,952,966)(637,677)
   (653,1055,810,909)(707,967)(712,1056,987,767)(733,960,1060,1010)
   (749,817,1046,904)(788,946,882,821)(835,1004,889,874)(844,860)(886,1030)
   (926,977,1049,956) #CAST S
    ;
  c:=(6,7)(9,11)(10,13)(12,15)(16,20)(17,22)(18,24)(19,26)(25,33)(28,37)(29,39)
   (30,41)(31,43)(32,45)(34,48)(35,50)(36,52)(38,55)(42,60)(46,65)(49,69)(51,72)
   (56,78)(57,80)(58,82)(61,85)(62,87)(63,89)(64,91)(66,94)(67,96)(68,98)
   (70,101)(73,105)(74,107)(75,109)(76,111)(77,113)(79,116)(81,119)(83,122)
   (84,124)(86,127)(88,130)(90,110)(92,135)(95,139)(99,144)(102,148)(103,149)
   (104,151)(106,154)(108,157)(114,164)(117,141)(120,171)(121,173)(125,178)
   (133,187)(134,188)(136,191)(137,193)(138,195)(142,200)(143,202)(146,206)
   (152,213)(160,222)(161,223)(162,225)(163,227)(166,231)(168,198)(169,235)
   (172,205)(174,208)(175,242)(177,245)(179,248)(181,251)(182,253)(184,256)
   (185,258)(186,260)(189,264)(194,270)(197,274)(199,277)(201,279)(204,283)
   (207,287)(210,291)(212,294)(214,217)(216,298)(219,302)(220,304)(221,306)
   (224,310)(229,315)(230,271)(233,275)(237,284)(238,324)(240,327)(246,333)
   (247,335)(249,338)(252,342)(254,345)(257,348)(259,351)(261,354)(262,356)
   (263,358)(265,361)(267,359)(269,365)(272,369)(276,374)(281,379)(285,384)
   (286,386)(289,389)(295,299)(296,396)(303,402)(309,405)(311,407)(313,410)
   (314,412)(316,366)(317,416)(318,418)(320,421)(321,423)(323,426)(326,417)
   (329,422)(330,434)(331,436)(334,440)(336,443)(340,430)(346,433)(352,447)
   (355,451)(357,452)(360,466)(364,471)(367,475)(368,477)(371,481)(372,483)
   (373,485)(375,487)(377,489)(381,493)(382,495)(383,497)(385,478)(390,486)
   (391,506)(392,507)(395,509)(399,513)(403,517)(404,514)(409,521)(411,523)
   (413,526)(415,529)(420,510)(427,530)(428,541)(429,542)(431,543)(432,544)
   (435,547)(437,550)(438,551)(439,553)(442,557)(444,528)(446,476)(448,562)
   (450,484)(456,496)(457,559)(458,561)(459,570)(460,564)(461,572)(462,503)
   (463,575)(465,578)(468,581)(479,592)(491,602)(494,605)(498,587)(500,612)
   (501,613)(502,615)(505,619)(508,623)(511,627)(512,629)(516,633)(518,635)
   (520,637)(531,647)(532,649)(533,648)(534,614)(535,651)(536,653)(537,652)
   (538,656)(540,658)(545,659)(548,585)(549,667)(552,671)(555,674)(558,677)
   (560,628)(563,681)(565,683)(566,668)(568,678)(569,687)(571,689)(573,643)
   (574,692)(576,688)(577,694)(580,696)(589,595)(597,707)(604,714)(606,716)
   (609,720)(611,723)(616,711)(618,729)(620,722)(626,735)(630,739)(631,741)
   (632,742)(636,743)(640,731)(644,753)(650,746)(654,756)(655,763)(657,766)
   (664,773)(670,779)(673,783)(684,790)(685,795)(690,796)(695,765)(701,805)
   (704,808)(705,762)(706,811)(710,806)(715,817)(724,816)(727,803)(728,827)
   (732,830)(740,836)(744,841)(747,843)(749,846)(751,849)(752,847)(759,855)
   (764,860)(767,861)(769,862)(775,824)(776,868)(777,869)(781,871)(782,873)
   (784,876)(785,794)(786,872)(789,881)(792,882)(793,886)(798,892)(799,894)
   (800,895)(804,897)(809,901)(810,903)(812,898)(820,910)(821,912)(825,911)
   (826,915)(828,918)(829,920)(831,922)(832,865)(834,926)(838,928)(842,930)
   (852,887)(857,940)(858,942)(867,947)(875,891)(879,960)(880,921)(888,966)
   (893,968)(900,971)(919,954)(923,979)(932,991)(941,994)(949,981)(951,1002)
   (953,1004)(957,1006)(958,1003)(963,1009)(964,1010)(967,1011)(969,1013)
   (975,993)(978,996)(982,1019)(983,1015)(1007,1033)(1008,1029)(1012,1018)
   (1025,1043)(1030,1045)(1034,1048)(1036,1040)(1038,1051)(1047,1057)(1054,1059)
    #CAST S
    ;
  d:=(1,2,3,4,5,6,8,10)(7,9,12,16,21,29,40,58)(11,14,18,25,34,49,70,102)
   (13,17,23,31,44,63,90,133)(15,19,27,36,53,75,110,160)
   (20,28,38,56,79,117,168,234)(22,30,42,61,86,128,182,254)
   (24,32,46,66,95,140,198,276)(26,35,51,73,106,155,217,300)
   (33,47,67,97,142,201,280,378)(37,54,76,112,162,226,312,409)
   (39,57,81,120,172,239,326,430)(41,59,83,123,176,244,331,437)
   (43,62,88,131,185,259,352,459)(45,64,92,136,192,268,364,472)
   (48,68,99,145,205,285,385,500)(50,71,103,150,211,293,393,287)
   (52,74,108,158,220,305,213,296)(55,77,114,165,230,317,417,532)
   (60,84,125,179,249,339,447,481)(65,93,137,194,271,368,478,591)
   (69,100,146,207,288,388,503,617)(72,104,152,214)
   (78,115,166,232,319,420,506,621)(80,118,169,236,322,425,327,431)
   (82,121,174,241,329,433,545,664)(85,126,180,250,340,448,544,663)
   (87,129,183,255,346,454,324,428)(89,132,186,261,355,461,573,200)
   (91,134,189,265,362,469,583,698)(94,138,196,273,371,482,595,706)
   (96,141,199,278,376,356,462,574)(98,143,203,282,381,494,606,717)
   (101,147,208,289,390,505,620,731)(105,153,215,297,397,511,628,737)
   (107,156,218,301,400,515,632,487)(109,159,221,307,404,518,402,516)
   (111,161,224,148,209,290,391,354)(113,163,228,314,413,527,483,596)
   (116,167,233,320,422,536,654,602)(119,170,237,323,427,540,659,769)
   (122,175,243,173,240,328,432,351)(124,177,246,334,441,556,475,588)
   (127,181,252,343,451,493,604,592)(130,184,257,349,457,526,643,696)
   (135,190,266,270,367,476,589,702)(139,197,275,373,486,599,710,814)
   (144,204,284,383,498,610,722,823)(149,210,292,248,337,445,560,374)
   (151,212,295,395,302,401,222,308)(154,216,299,399,514,631,304,403)
   (157,219,303,306)(164,229,316,415,530,646,756,854)
   (171,238,325,429,345,453,566,685)(178,247,336,444,559,679,714,818)
   (187,262,357,463,576,225,311,408)(188,263,359,465,579,695,802,896)
   (191,267,363,470,584,699,804,898)(193,269,366,474,587,701,806,881)
   (195,272,370,480,594,705,810,904)(202,281,380,492)
   (206,286,387,502,616,728,223,309)(227,313,411,524,641,751,850,934)
   (231,318,419,534,650,759,692,800)(235,321,424,538,436,549,668,777)
   (242,330,435,548,666,775,867,949)(245,332,438,552,672,782,874,955)
   (251,341,449,563,384,499,611,724)(253,344,452,565,684,794,888,920)
   (256,347,455,567,416,531,648,623)(258,350,458,569,688,798,893,940)
   (260,353,460,571,690,578,407,520)(264,360,467,580,697,803,897,970)
   (274,372,484,597,708,813,907,466)(277,375,488,600,711,815,572,691)
   (279,377,490,601,712,816,908,974)(283,382,496,608,719,358,464,577)
   (291,392,333,439,554,405,471,585)(294,394,508,624,733,832,924,985)
   (298,398,512,489,517,634,744,842)(310,406,519,636,746,844,575,693)
   (315,414,528,644,754,852,936,779)(335,442,529,645,755,853,937,992)
   (338,446,561,680,790,883,964,912)(342,450,564,682,792,885,966,960)
   (348,456,568,686,796,890,968,1012)(361,468,582,649,758,707,812,906)
   (365,473,586,700,677,788,880,962)(369,479,593,704,809,902,973,1015)
   (379,491,603,713,817,687,797,891)(386,501,614,726,667,776,434,546)
   (389,504,618,730,829,742,839,735)(396,510,626,736,833,925,986,1022)
   (410,522,639,749,847,612,725,825)(412,525,642,752,851,935,886,967)
   (418,533,615,727,826,916,979,581)(421,535,652,761,857,941,995,1026)
   (423,537,655,764,827,917,876,957)(426,539,657,767,637,747,845,931)
   (440,555,675,786,878,959,1008,1035)(443,558,678,789,882,963,1010,1037)
   (477,590,703,807,899,720,821,913)(485,598,709,557,676,787,879,961)
   (495,607,718,671,781,872,658,768)(497,609,721,822,914,977,1018,1041)
   (507,622,732,831,923,984,991,1025)(509,625,734,550,669,778,647,757)
   (513,630,740,837,741,838,926,987)(521,638,748,651,760,856,939,928)
   (523,640,750,848,933,683,793,887)(541,660,770,739,835,927,988,994)
   (542,661,771,863,947,1000,570,627)(543,662,772,864,948,635,745,843)
   (547,665,774,866,795,889,773,865)(551,670,780,870,952,1002,1029,619)
   (553,673,784,877,958,1007,1034,1049)(562,681,791,884,965,930,990,1024)
   (605,715,819,909)(613,629,738,834)(633,743,840,929,989,1023,861,945)
   (653,762,858,943,997,1013,1006,1032)(656,765,855,938,993,871,953,766)
   (674,785,873,954,1005,1031,1046,753)(689,799,694,801,862,946,999,903)
   (716,820,911,976,1017,922,983,1021)(723,824,808,900,972,895,846,932)
   (729,828,919,981,1020,869,951,1003)(763,859,915,978,1019,1042,1004,1030)
   (783,875,956,942,996,1027,1044,1051)(805,830,921,982,1009,1036,1050,1048)
   (811,905,894,969,1014,1039,1053,901)(849,860,944,998,1011,1038,1052,892)
   (868,950,1001,1028)(910,975,1016,1040,1054,918,980,971)
   (1033,1047,1058,1062,1045,1056,1061,1064)
   (1043,1055,1060,1057,1059,1063,1065,1066) #CAST S
    ;
  om83:=SubStructure(S,a,#TODO CLOSURE
    b);
  om83.Order:=10151968619520;
  # =v= MULTIASSIGN =v=
  phi:=FPGroupStrong(om83);
  F:=phi.val1;
  phi:=phi.val2;
  # =^= MULTIASSIGN =^=
  soc:=Socle(group);
  aut:=Index(group,soc);
  if Print > 1 then
    Print("group is O-(8,3):[%o]\n",aut);
  fi;
  # =v= MULTIASSIGN =v=
  gb:=get_standard_gens_om83@(soc);
  ga:=gb.val1;
  gb:=gb.val2;
  # =^= MULTIASSIGN =^=
  soc:=SubStructure(soc,ga,#TODO CLOSURE
    gb);
  soc.Order:=10151968619520;
  newgens:=[ga,gb];
  for g in Generators(group) do
    if not g in SubStructure(group,newgens) then
      Add(newgens,g);
    fi;
  od;
  group:=SubStructure(group,newgens);
  autom83:=SubStructure(S,a,#TODO CLOSURE
    b,c,d);
  ims:=[a,b];
  homom:=GroupHomomorphismByImages(soc,om83,
    GeneratorsOfGroup(soc),ims);
  for i in [Ngens(soc)+1..Ngens(group)] do
    g:=group.i;
    CG:=autom83;
    ce:=One(autom83);
    for j in [1..2] do
      # =v= MULTIASSIGN =v=
      h:=IsConjugate(CG,om83.j^ce,homom(soc.j^g));
      isc:=h.val1;
      h:=h.val2;
      # =^= MULTIASSIGN =^=
      if not isc then
        Error("Conjugation error in Aut(O-(8,3))");
      fi;
      CG:=Centraliser(CG,homom(soc.j^g));
      ce:=ce*h;
    od;
    Add(ims,ce);
  od;
  newgens:=ims;
  autom83:=SubStructure(autom83,ims);
  if aut=2 then
    dummy:=x:=ForAny(ims,x->xnotinom83);
    Assert(1,dummy);
  fi;
  for g in [c,d] do
    if not g in autom83 then
      Add(ims,g);
      autom83:=SubStructure(S,ims);
    fi;
  od;
  homom:=GroupHomomorphismByImages(group,autom83,
    GeneratorsOfGroup(group),newgens);
  maximals:=[];
  if not max then
    return rec(val1:=homom,
      val2:=autom83,
      val3:=maximals,
      val4:=F,
      val5:=phi);
  fi;
  if aut=2 then
    simple_flag:=distinguish_2_1@(om83,x);
  else
    simple_flag:=aut=1;
  fi;
  #   3^6:2U(4,3).2
  M:=SubStructure(om83,a,#TODO CLOSURE
    b*a*b*a*b^-1*a*b^-1,(b^-1*a*b^-1*a*b^-1*a*b*a*b)^2);
  M.Order:=9523422720;
  Add(maximals,M);
  if simple_flag then
    #   O(7,3):2 twice
    M:=SubStructure(om83,a*b^2*a*b^-1*a*b*a*b^2*a,#TODO CLOSURE
      b*a*b^-1*a*b*a*b*a*b^-1*a*b^2*a*b^2);
    M.Order:=9170703360;
    Add(maximals,M);
    Add(maximals,M^d);
  else
    #   2U(4,3).[4]
    M:=SubStructure(om83,
     b^-1*a*b*a*b^-1*a*b^-1*a*b*a*b^2*a*b^2*a*b*a*b*a*b*a*b^-1*a*b,#TODO 
     CLOSURE
      a*b*a*b^2*a*b*a*b*a*b*a*b^-1*a*b^-1*a*b^2*a*b*a*b*a*b*a*b*a*b^-1*a);
    M.Order:=26127360;
    Add(maximals,M);
  fi;
  #   3^(3+6):(L(3,3)x2^2)
  M:=SubStructure(om83,a*b^-1*a*b*a*b^2*a*b^2*a*b*a*b*a,#TODO CLOSURE
    a*b^2*a*b^-1*a*b^2*a*b^-1*a*b*a*b*a*b*a*b);
  M.Order:=442158912;
  Add(maximals,M);
  #   3^(1+8):(2S4xA6)
  M:=SubStructure(om83,
   b*a*b^2*a*b*a*b*a*b*a*b^-1*a*b^-1*a*b^-1*a*b^-1*a*b^-1*a*b^-1,#TODO CLOSURE
    b^2*a*b^2*a*b^-1*a*b*a*b^2*a*b^2*a*b*a*b*a*b,
   a*b*a*b*a*b^-1*a*b*a*b^2*a*b^2*a*b*a*b*a*b^2*a*b^2*a);
  M.Order:=340122240;
  Add(maximals,M);
  #   (4 x L(4,3)):2
  M:=SubStructure(om83,a*b^-1*a*b*a,#TODO CLOSURE
    a*b*a*b^-1*a*b^-1*a*b*a*b*a*b^-1*a*b^-1*a*b*a*b^2);
  M.Order:=48522240;
  Add(maximals,M);
  if simple_flag then
    #   S4 x U(4,2):2 twice
    M:=SubStructure(om83,
     (a*b*a*b^-1*a*b^2*a*b^-1*a*b^-1*a*b^-1*a*b*a*b*a*b^-2*a*b*a*b^-1*a)
     ^2,#TODO CLOSURE
      a*b^2*a*b*a*b^-1*a*b^2*a*b^-1*a*b*a*b^-1*a*b^-1*a*b*a*b^-1*a*b^-2*a,
     (a*b*a*b^2*a*b^2*a*b*a*b*a*b^-1*a*b^-1*a*b^-1*a*b^-2*a*b^-2*a*b^-1*a)
     ^2,
     a*b^-1*a*b*a*b^-1*a*b^-1*a*b*a*b*a*b*a*b^-1*a*b^-1*a*b*a*b^-1*a*b^-1*a*b^-2\
*a*b^-1*a);

         M.Order:=1244160;
    Add(maximals,M);
    Add(maximals,M^d);
  fi;
  #   L(2,81):2
  M:=SubStructure(om83,b^-1*a*b^2*a*b^-1*a*b^2*a*b^-1*a*b*a*b^2*a*b*a*b^-2*a*b,
   #TODO CLOSURE
    a*b^-1*a*b^2*a*b*a*b*a*b^2*a*b^2*a*b*a*b^-1*a*b^2*a*b*a,
   a*b*a*b*a*b^2*a*b^-1*a*b*a*b*a*b^-1*a*b^-1*a*b*a*b^2*a*b^-1*a*b^-1*a,
   a*b*a*b^-1*a*b^2*a*b^-1*a*b^2*a*b^-1*a*b*a*b^-1*a*b^-1*a*b*a*b^2*a*b*a*b^-1*a\
);

     M.Order:=531360;
  Add(maximals,M);
  #   (A6x2(A4xA4).2).2
  M:=SubStructure(om83,
   a*b*a*b*a*b^-1*a*b^2*a*b*a*b^2*a*b^2*a*b^-1*a*b^2*a*b*a*b^-1*a*b^-1*a,#TODO 
   CLOSURE
    b*a*b*a*b*a*b^-1*a*b^2*a*b^-1*a*b*a*b*a*b^-1*a*b^-1*a*b*a*b^-2*a*b*a*b^-1*a*\
b^-1*a*b^-1,b*a*b^-1*a*b*a*b*a*b^-1*a*b*a*b*a*b^-1*a*b^2*a*b*a*b*a*b*a*b^-1*a*b^\
-1*a*b^-1*a*b^-1*a*b^-1*a*b^-1*a*b^-1);

     M.Order:=414720;
  Add(maximals,M);
  return rec(val1:=homom,
    val2:=autom83,
    val3:=maximals,
    val4:=F,
    val5:=phi);
end);


